{{- $values := . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "jupyterhub.fullname" . }}-proxy
  labels:
    component: proxy
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      component: proxy
  template:
    metadata:
      labels:
        component: proxy
    spec:
      {{- with .Values.imagePullSecrets }}
      {{- if not .existingSecret }}
      imagePullSecrets:
        - name: {{ .name }}
      {{- else}}
      imagePullSecrets:
        - name: {{ .existingSecret }}
      {{- end }}
      {{- end}}
      containers:
        - name: chp
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash"]
          args: ["-c", "source /opt/conda/bin/activate && conda activate jupyterhub && configurable-http-proxy --ip=0.0.0.0 --api-ip=0.0.0.0 --api-port=8001 --default-target=http://$(HUB_SERVICE_HOST):$(HUB_SERVICE_PORT) --error-target=http://$(HUB_SERVICE_HOST):$(HUB_SERVICE_PORT)/hub/error --port=8000 --log-level=debug"]
          securityContext:
            allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
          envFrom:
            - secretRef:
                name: {{( include "get.tokenName" )}}
#          env:
#            - name: CONFIGPROXY_AUTH_TOKEN
#              value: {{($CONFIGPROXY_AUTH_TOKEN | quote)}}
          ports:
            - containerPort: 8000
              name: proxy-public
            - containerPort: {{ .Values.serviceApi.port }}
              name: api
---
