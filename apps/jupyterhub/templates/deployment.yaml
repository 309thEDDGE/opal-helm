{{- $values := . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "jupyterhub.fullname" . }}-hub
  labels:
    component: jupyter
spec:
  replicas: 1
  selector:
    matchLabels:
      component: jupyter
  template:
    metadata:
      labels:
        component: jupyter
    spec:
      serviceAccountName: hub
      {{- with .Values.imagePullSecrets }}
      {{- if not .existingSecret }}
      imagePullSecrets:
        - name: {{ .name }}
      {{- else }}
      imagePullSecrets:
        - name: {{ .existingSecret }}
      {{- end }}
      {{- end}}
      containers:
        - name: jupyter-hub
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash"]
          args: ["-c", "source /opt/conda/bin/activate && conda activate jupyterhub && jupyterhub -f /home/jovyan/jupyterhub_config.py"]
          ports:
            - containerPort: 8081
          {{- with .Values.env }}
          env:
            - name: KEYCLOAK_JUPYTERHUB_OAUTH_CALLBACK_URL
              value: {{ include "render-url" ( dict "value" .keycloakJupyterhubOauthCallbackUrl "context" $values ) }}
            - name: S3_ENDPOINT
              value: {{ include "render-url" ( dict "value" .s3Endpointurl "context" $values ) }}
            - name: KEYCLOAK_JUPYTERHUB_AUTHORIZE_URL
              value: {{ include "render-url" ( dict "value" .keycloakJupyterhubAuthorizeUrl "context" $values ) }}
            - name: KEYCLOAK_JUPYTERHUB_USERDATA_URL
              value: {{ include "render-url" ( dict "value" .keycloakJupyterhubUserdataUrl "context" $values ) }}
            - name: KEYCLOAK_OPAL_API_URL
              value: {{ include "render-url" ( dict "value" .keycloakOpalApiUrl "context" $values ) }}
            - name: BASE_URL
              value: {{ include "render-url" ( dict "value" .jupyterhubBaseUrl "context" $values ) }}
            - name: MINIO_IDENTITY_OPENID_CLIENT_ID
              value: {{ .openidClientId }}
            - name: KEYCLOAK_JUPYTERHUB_CLIENT_ID
              value: {{ .openidClientId }}
            - name: SINGLE_USER_IMAGE
              value: {{ .singleUserImage }}
            - name: PYTHONPATH
              value: {{ .pythonPath }}
            - name: OPAL_BANNER_COLOR
              value: {{ .opalBannerColor }}
            - name: OPAL_BANNER_TEXT
              value: {{ .opalBannerText }}
            - name: KEYCLOAK_JUPYTERHUB_USERNAME_KEY
              value: {{ .keycloakJupyterhubUsernameKey }}
            {{- end }}
            {{- if .Values.resources.useAzureFile }}
            - name: USE_AZUREFILE
              value: "True"
            {{- end }}
            - name: SINGLE_USER_STORAGE_CAPACITY
              value: {{ .Values.resources.singleuser_storage }}
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: MONGODB_USERNAME
              value: "rootuser"
            - name: MONGODB_HOST
              value: {{ .Release.Name }}-mongodb:27017
          envFrom:
            - secretRef:
                name: {{( include "get.tokenName" . )}}
            {{- if .Values.secrets.oauth.existingSecret }}
            - secretRef:
                name: {{ .Values.secrets.oauth.existingSecret }}
            {{- else }}
            - secretRef:
                name: {{( include "get.oauthName" . )}}
            {{- end }}
            - secretRef:
                name: {{ .Release.Name }}-mongodb
          resources:
            requests: 
              cpu: 500m
          securityContext:
            runAsUser: 1000
            runAsGroup: 100
          volumeMounts:
            - name: jupyterhub-config-py-mnt
              mountPath: /home/jovyan/jupyterhub_config.py
              subPath: jupyterhub_config.py
{{- if .Values.gitSync.enabled }}
        - image: "{{ .Values.gitSync.image.repository }}:{{ .Values.gitSync.image.tag }}"
          name: opal-repo-sync
          args:
            - "--repo=https://github.com/309theddge/opal.git"
            - "--depth=1"
            - "--max-failures=-1"
            - "--group-write"
            - "--username={{ .Values.gitSync.username }}"
            - "--password-file=/etc/git-secret/token"
            - "--root=/repos"
            - "--link=/repos/opal"
            - "--period=120s"
          volumeMounts:
            - name: git-creds-mnt
              mountPath: /etc/git-secret
              readOnly: true
            - name: opal-sync-mnt
              mountPath: /repos
              readOnly: false
          securityContext:
            #runAsUser: 65533 # git-sync-user
            runAsUser: 1000 #jovyan
            runAsGroup: 100
        - image: "{{ .Values.gitSync.image.repository }}:{{ .Values.gitSync.image.tag }}"
          name: weave-repo-sync
          args:
            - "--repo=https://github.com/309theddge/weave.git"
            - "--depth=1"
            - "--max-failures=-1"
            - "--group-write"
            - "--username={{ .Values.gitSync.username }}"
            - "--password-file=/etc/git-secret/token"
            - "--root=/repos"
            - "--link=/repos/weave"
            - "--period=120s"
          volumeMounts:
            - name: git-creds-mnt
              mountPath: /etc/git-secret
              readOnly: true
            - name: weave-sync-mnt
              mountPath: /repos
              readOnly: false
          securityContext:
            #runAsUser: 65533 # git-sync-user
            runAsUser: 1000 #jovyan
            runAsGroup: 100
        - image: "{{ .Values.gitSync.image.repository }}:{{ .Values.gitSync.image.tag }}"
          name: ddapi-repo-sync
          args:
            - "--repo=https://github.com/309theddge/data-discovery-api.git"
            - "--depth=1"
            - "--max-failures=-1"
            - "--group-write"
            - "--username={{ .Values.gitSync.username }}"
            - "--password-file=/etc/git-secret/token"
            - "--root=/repos"
            - "--link=/repos/data-discovery-api"
            - "--period=120s"
          volumeMounts:
            - name: git-creds-mnt
              mountPath: /etc/git-secret
              readOnly: true
            - name: ddapi-sync-mnt
              mountPath: /repos
              readOnly: false
          securityContext:
            #runAsUser: 65533 # git-sync-user
            runAsUser: 1000 #jovyan
            runAsGroup: 100
      securityContext:
        runAsNonRoot: true
        fsGroup: 100
{{- end }}
      volumes:
      - name: jupyterhub-config-py-mnt
        configMap:
          name: jupyterhub-config-py
      - name: metaflow-datastore-mnt
        persistentVolumeClaim:
          claimName: metaflow-datastore
{{- if .Values.gitSync.enabled }}
      - name: opal-sync-mnt
        persistentVolumeClaim:
          claimName: opal-sync-pvc
      - name: weave-sync-mnt
        persistentVolumeClaim:
          claimName: weave-sync-pvc
      - name: ddapi-sync-mnt
        persistentVolumeClaim:
          claimName: ddapi-sync-pvc
{{- end }}
      - name: git-creds-mnt
        secret:
          secretName: {{ .Values.gitSync.gitSecret.secretName }}
          defaultMode: 0400
