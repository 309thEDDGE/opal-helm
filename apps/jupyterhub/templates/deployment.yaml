{{- $values := . -}}

{{- $CONFIGPROXY_AUTH_TOKEN := ( randAlphaNum 64) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "jupyterhub.fullname" . }}-proxy
  labels:
    component: proxy
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      component: proxy
  template:
    metadata:
      labels:
        component: proxy
    spec:
      {{- with .Values.imagePullSecrets }}
      {{- if not .existingSecret }}
      imagePullSecrets:
        - name: {{ .name }}
      {{- else}}
      imagePullSecrets:
        - name: {{ .existingSecret }}
      {{- end }}
      {{- end}}
      containers:
        - name: chp
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash"]
          args: ["-c", "source /opt/conda/bin/activate && conda activate jupyterhub && configurable-http-proxy --ip=0.0.0.0 --api-ip=0.0.0.0 --api-port=8001 --default-target=http://$(HUB_SERVICE_HOST):$(HUB_SERVICE_PORT) --error-target=http://$(HUB_SERVICE_HOST):$(HUB_SERVICE_PORT)/hub/error --port=8000 --log-level=debug"]
          securityContext:
            allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
          env:
            - name: CONFIGPROXY_AUTH_TOKEN
              value: {{($CONFIGPROXY_AUTH_TOKEN | quote)}}
          ports:
            - containerPort: 8000
              name: proxy-public
            - containerPort: {{ .Values.serviceApi.port }}
              name: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "jupyterhub.fullname" . }}-hub
  labels:
    component: jupyter
spec:
  replicas: 1
  selector:
    matchLabels:
      component: jupyter
  template:
    metadata:
      labels:
        component: jupyter
    spec:
      serviceAccountName: hub
      {{- with .Values.imagePullSecrets }}
      {{- if not .existingSecret }}
      imagePullSecrets:
        - name: {{ .name }}
      {{- else}}
      imagePullSecrets:
        - name: {{ .existingSecret }}
      {{- end }}
      {{- end}}
      containers:
        - name: jupyter-hub
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash"]
          args: ["-c", "source /opt/conda/bin/activate && conda activate jupyterhub && jupyterhub -f /home/jovyan/jupyterhub_config.py"]
          ports:
            - containerPort: 8081
          {{- with .Values.env }}
          env:
            - name: KEYCLOAK_JUPYTERHUB_OAUTH_CALLBACK_URL
              value: {{ include "render-url" ( dict "value" .keycloakJupyterhubOauthCallbackUrl "context" $values ) }}
            - name: S3_ENDPOINT
              value: {{ include "render-url" ( dict "value" .s3Endpointurl "context" $values ) }}
            - name: KEYCLOAK_JUPYTERHUB_AUTHORIZE_URL
              value: {{ include "render-url" ( dict "value" .keycloakJupyterhubAuthorizeUrl "context" $values ) }}
            - name: KEYCLOAK_JUPYTERHUB_USERDATA_URL
              value: {{ include "render-url" ( dict "value" .keycloakJupyterhubUserdataUrl "context" $values ) }}
            - name: KEYCLOAK_OPAL_API_URL
              value: {{ include "render-url" ( dict "value" .keycloakOpalApiUrl "context" $values ) }}
            - name: MINIO_IDENTITY_OPENID_CLIENT_ID
              value: {{ .openidClientId }}
            - name: KEYCLOAK_JUPYTERHUB_CLIENT_ID
              value: {{ .openidClientId }}
            - name: SINGLE_USER_IMAGE
              value: {{ .singleUserImage }}
            - name: PYTHONPATH
              value: {{ .pythonPath }}
            - name: opalBannerColor
              value: {{ .opalBannerColor }}
            - name: OPAL_BANNER_TEXT
              value: {{ .opalBannerText }}
            - name: KEYCLOAK_JUPYTERHUB_USERNAME_KEY
              value: {{ .keycloakJupyterhubUsernameKey }}
            {{- end }}
            - name: CONFIGPROXY_AUTH_TOKEN
              value: {{($CONFIGPROXY_AUTH_TOKEN | quote)}}
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
          envFrom:
            - secretRef:
                name: {{( include "get.tokenName" .)}}
            {{- if .Values.secrets.oauth.existingSecret }}
            - secretRef:
                name: {{ .Values.secrets.oauth.existingSecret }}
            {{- else }}
            - secretRef:
                name: {{( include "get.oauthName" )}}
            {{- end }}
          resources:
            requests: 
              cpu: 500m
          volumeMounts:
            - name: jupyterhub-config-py-mnt
              mountPath: /home/jovyan/jupyterhub_config.py
              subPath: jupyterhub_config.py
        - image: registry.k8s.io/git-sync/git-sync:v4.0.0
          name: opal-repo-sync
          args:
            - "--repo=git@github.com:309theddge/opal"
            - "--depth=1"
            - "--max-failures=-1"
            - "--ssh"
            - "--root=/repos"
            - "--link=/repos/opal"
            - "--period=120s"
          volumeMounts:
            - name: git-creds-mnt
              mountPath: /etc/git-secret
              readOnly: true
            - name: opal-sync-mnt
              mountPath: /repos
              readOnly: false
          securityContext:
            runAsUser: 65533 # git-sync-user
        - image: registry.k8s.io/git-sync/git-sync:v4.0.0
          name: weave-repo-sync
          args:
            - "--repo=git@github.com:309theddge/weave"
            - "--depth=1"
            - "--max-failures=-1"
            - "--ssh"
            - "--root=/repos"
            - "--link=/repos/weave"
            - "--period=120s"
          volumeMounts:
            - name: git-creds-mnt
              mountPath: /etc/git-secret
              readOnly: true
            - name: weave-sync-mnt
              mountPath: /repos
              readOnly: false
          securityContext:
            runAsUser: 65533 # git-sync-user
      securityContext:
        fsGroup: 65533
      volumes:
      - name: jupyterhub-config-py-mnt
        configMap:
          name: jupyterhub-config-py
      - name: opal-sync-mnt
        persistentVolumeClaim:
          claimName: opal-sync-pvc
      - name: weave-sync-mnt
        persistentVolumeClaim:
          claimName: weave-sync-pvc
      - name: git-creds-mnt
        secret:
          secretName: git-creds
          defaultMode: 0400
