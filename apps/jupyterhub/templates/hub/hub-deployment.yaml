{{- $values := . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "jupyterhub.fullname" . }}-hub
  labels:
    {{- include "jupyterhub.labels" . | nindent 4 }}
    app.kubernetes.io/component: jupyter
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "jupyterhub.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: jupyter
  template:
    metadata:
      labels:
        {{- include "jupyterhub.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: jupyter
        #hub.jupyter.org/network-access-proxy-api: "true"
        #hub.jupyter.org/network-access-proxy-http: "true"
        #hub.jupyter.org/network-access-singleuser: "true"
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jupyterhub.fullname" . }}
      {{- with .Values.imagePullSecrets }}
      {{- if not .existingSecret }}
      imagePullSecrets:
        - name: {{ .name }}
      {{- else }}
      imagePullSecrets:
        - name: {{ .existingSecret }}
      {{- end }}
      {{- end }}
      containers:
        - name: jupyter-hub
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash", "-c"]
          args:
            - >-
              source /opt/conda/bin/activate &&
              conda activate jupyterhub &&
              jupyterhub -f /home/jovyan/jupyterhub_config.py
              {{- if .Values.debug.enabled }}
              --debug
              {{- end }}
          ports:
            - containerPort: 8081
              name: http
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: HELM_RELEASE_NAME
              value: {{ .Release.Name | quote }}
            - name: POD_NAMESPACE
              value: {{ .Values.namespace }}
            - name: SINGLE_USER_STORAGE_CAPACITY
              value: {{ .Values.resources.singleuser_storage | default "1Gi" }}
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: MONGODB_USERNAME
              value: "rootuser"
            - name: MONGODB_HOST
              value: {{ .Release.Name }}-mongodb:27017
            - name: NGINX_HOST
              value: http://{{ .Release.Name }}-nginx.{{ .Values.namespace }}.svc.cluster.local/condapkg/
            - name: CONDA_OVERRIDE_CUDA
              value: "12.0"
          {{- with .Values.env }}
            - name: KEYCLOAK_JUPYTERHUB_OAUTH_CALLBACK_URL
              value: {{ tpl .keycloakJupyterhubOauthCallbackUrl $ | default (print (include "domains.jhub" $values) "/hub/oauth_callback") }}
            - name: KEYCLOAK_JUPYTERHUB_AUTHORIZE_URL
              value: {{ tpl .keycloakJupyterhubAuthorizeUrl $ | default (print (include "domains.keycloak" $values) "/realms/master/protocol/openid-connect/auth") }}
            - name: KEYCLOAK_JUPYTERHUB_USERDATA_URL
              value: {{ tpl .keycloakJupyterhubUserdataUrl $ | default (print (include "domains.keycloak" $values) "/realms/master/protocol/openid-connect/userinfo") }}
            - name: KEYCLOAK_OPAL_API_URL
              value: {{ tpl .keycloakOpalApiUrl $ | default (print (include "domains.keycloak" $values) "/realms/master/protocol/openid-connect/token") }}
            - name: BASE_URL
              value: {{ tpl .jupyterhubBaseUrl $ | default (include "domains.jhub" $values) }}
            - name: S3_ENDPOINT
              value: {{ tpl .s3EndpointUrl $ | default (print "http://" $.Release.Name "-minio-hl." ( $.Values.minioNS | default "minio-tenant" ) ".svc.cluster.local:9000") }}
            - name: MINIO_IDENTITY_OPENID_CLIENT_ID
              value: {{ .openidClientId }}
            - name: KEYCLOAK_JUPYTERHUB_CLIENT_ID
              value: {{ .openidClientId }}
            - name: SINGLE_USER_IMAGE
              value: {{ .singleUserImage }}
            - name: PYTHONPATH
              value: {{ .pythonPath }}
            - name: OPAL_BANNER_COLOR
              value: {{ .opalBannerColor }}
            - name: OPAL_BANNER_TEXT
              value: {{ .opalBannerText }}
            - name: KEYCLOAK_JUPYTERHUB_USERNAME_KEY
              value: {{ .keycloakJupyterhubUsernameKey }}
          {{- end }}
            {{- if .Values.env.daskGatewayServiceName }}
            - name: DASK_GATEWAY_ENDPOINT
              value: {{ .Values.env.daskGatewayServiceName }}
            {{- else }}
            - name: DASK_GATEWAY_ENDPOINT
              value: http://{{ .Release.Name }}-dask-gateway-traefik.{{ .Values.namespace }}.svc.cluster.local
            {{- end }}
            {{- if .Values.resources.useAzureFile }}
            - name: USE_AZUREFILE
              value: "True"
            {{- end }}
          envFrom:
            - secretRef:
                name: {{( include "get.tokenName" . )}}
            {{- if .Values.secrets.oauth.existingSecret }}
            - secretRef:
                name: {{ .Values.secrets.oauth.existingSecret }}
            {{- else }}
            - secretRef:
                name: {{( include "get.oauthName" . )}}
            {{- end }}
            - secretRef:
                name: {{ .Release.Name }}-mongodb
          resources:
            requests: 
              cpu: 500m
          securityContext:
            runAsUser: 1000
            runAsGroup: 100
          volumeMounts:
            - name: jupyterhub-config-py-mnt
              mountPath: /home/jovyan/jupyterhub_config.py
              subPath: jupyterhub_config.py
        {{- if .Values.gitSync.enabled }}
        - image: "{{ .Values.gitSync.image.repository }}:{{ .Values.gitSync.image.tag }}"
          name: opal-repo-sync
          args:
            - "--repo=https://github.com/309theddge/opal.git"
            - "--depth=1"
            - "--max-failures=-1"
            - "--group-write"
            - "--username={{ .Values.gitSync.username }}"
            - "--password-file=/etc/git-secret/token"
            - "--root=/repos"
            - "--link=/repos/opal"
            - "--period=120s"
          volumeMounts:
            - name: git-creds-mnt
              mountPath: /etc/git-secret
              readOnly: true
            - name: opal-sync-mnt
              mountPath: /repos
              readOnly: false
          securityContext:
            #runAsUser: 65533 # git-sync-user
            runAsUser: 1000 #jovyan
            runAsGroup: 100
        - image: "{{ .Values.gitSync.image.repository }}:{{ .Values.gitSync.image.tag }}"
          name: weave-repo-sync
          args:
            - "--repo=https://github.com/309theddge/weave.git"
            - "--depth=1"
            - "--max-failures=-1"
            - "--group-write"
            - "--username={{ .Values.gitSync.username }}"
            - "--password-file=/etc/git-secret/token"
            - "--root=/repos"
            - "--link=/repos/weave"
            - "--period=120s"
          volumeMounts:
            - name: git-creds-mnt
              mountPath: /etc/git-secret
              readOnly: true
            - name: weave-sync-mnt
              mountPath: /repos
              readOnly: false
          securityContext:
            #runAsUser: 65533 # git-sync-user
            runAsUser: 1000 #jovyan
            runAsGroup: 100
        - image: "{{ .Values.gitSync.image.repository }}:{{ .Values.gitSync.image.tag }}"
          name: ddapi-repo-sync
          args:
            - "--repo=https://github.com/309theddge/data-discovery-api.git"
            - "--depth=1"
            - "--max-failures=-1"
            - "--group-write"
            - "--username={{ .Values.gitSync.username }}"
            - "--password-file=/etc/git-secret/token"
            - "--root=/repos"
            - "--link=/repos/data-discovery-api"
            - "--period=120s"
          volumeMounts:
            - name: git-creds-mnt
              mountPath: /etc/git-secret
              readOnly: true
            - name: ddapi-sync-mnt
              mountPath: /repos
              readOnly: false
          securityContext:
            #runAsUser: 65533 # git-sync-user
            runAsUser: 1000 #jovyan
            runAsGroup: 100
      securityContext:
        runAsNonRoot: true
        fsGroup: 100
{{- end }}
      volumes:
      - name: jupyterhub-config-py-mnt
        configMap:
          name: jupyterhub-config-py
      - name: metaflow-datastore-mnt
        persistentVolumeClaim:
          claimName: metaflow-datastore
{{- if .Values.gitSync.enabled }}
      - name: opal-sync-mnt
        persistentVolumeClaim:
          claimName: opal-sync-pvc
      - name: weave-sync-mnt
        persistentVolumeClaim:
          claimName: weave-sync-pvc
      - name: ddapi-sync-mnt
        persistentVolumeClaim:
          claimName: ddapi-sync-pvc
{{- end }}
      - name: git-creds-mnt
        secret:
          secretName: {{ .Values.gitSync.gitSecret.secretName }}
          defaultMode: 0400
