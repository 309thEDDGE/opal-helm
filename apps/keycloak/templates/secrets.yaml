{{- $secrets := .Values.secrets.env }}
---
{{- if not $secrets.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "keycloak.fullname" $ }}-env
  namespace: {{ .Values.namespace }}
  {{- with $secrets.annotations }}
  annotations:
  {{- range $key, $value := . }}
  {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 4 }}
  {{- end }}
  {{- end }}
  labels:
  {{- include "keycloak.labels" $ | nindent 4 }}
type: {{ default "Opaque" $secrets.type }}
{{- with $secrets.stringData }}
stringData:
  {{- range $key, $value := . }}
    {{- if eq $key "KEYCLOAK_ADMIN_PASSWORD"}}
    {{- printf "%s: %s" $key (( randAlphaNum 16 ) | quote) | nindent 2 }}
    {{- else }}
    {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 2 }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}
---
{{- if not .secrets.oauth.existingSecret }}
# client secret for oauth provider
{{- $secretName := ( include "get.oauthName" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ .Values.namespace }}
type: Opaque
data:
  {{- if .Values.keycloakSetup.clientSecret }}
  KEYCLOAK_JUPYTERHUB_CLIENT_SECRET: {{ .Values.keycloakSetup.clientSecret }}
  {{- else }}
  {{- $OAUTH_SECRET := ( randAlphaNum 64) }}
  KEYCLOAK_JUPYTERHUB_CLIENT_SECRET: {{ $OAUTH_SECRET | b64enc }}
  {{- end }}
{{- end }}
