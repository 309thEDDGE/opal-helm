{{- $CONFIGPROXY_AUTH_TOKEN := ( randAlphaNum 64) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "jupyterhub.fullname" . }}-proxy
  labels:
    component: proxy
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      component: proxy
  template:
    metadata:
      labels:
        component: proxy
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .name }}
      {{- end }}
      containers:
        - name: chp
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash"]
          args: ["-c", "source /opt/conda/bin/activate && conda activate jupyterhub && configurable-http-proxy --ip=0.0.0.0 --api-ip=0.0.0.0 --api-port=8001 --default-target=http://$(HUB_SERVICE_HOST):$(HUB_SERVICE_PORT) --error-target=http://$(HUB_SERVICE_HOST):$(HUB_SERVICE_PORT)/hub/error --port=8000 --log-level=debug"]
          securityContext:
            allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
          env:
            - name: CONFIGPROXY_AUTH_TOKEN
              value: {{($CONFIGPROXY_AUTH_TOKEN | quote)}}
          ports:
            - containerPort: 8000
              name: proxy-public
            - containerPort: {{ .Values.serviceApi.port }}
              name: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "jupyterhub.fullname" . }}-hub
  labels:
    component: jupyter
spec:
  replicas: 1
  selector:
    matchLabels:
      component: jupyter
  template:
    metadata:
      labels:
        component: jupyter
    spec:
      serviceAccountName: hub
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .name }}
      {{- end }}
      containers:
        - name: jupyter-hub
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash"]
          args: ["-c", "source /opt/conda/bin/activate && conda activate jupyterhub && jupyterhub -f /home/jovyan/jupyterhub_config.py"]
          ports:
            - containerPort: 8081
          {{- with .Values.env }}
          env:
            - name: KEYCLOAK_JUPYTERHUB_OAUTH_CALLBACK_URL
              value: {{ .keycloakJupyterhubOauthCallbackUrl }}
            - name: S3_ENDPOINT
              value: {{ .s3Endpointurl }}
            - name: KEYCLOAK_JUPYTERHUB_AUTHORIZE_URL
              value: {{ .keycloakJupyterhubAuthorizeUrl }}
            - name: KEYCLOAK_JUPYTERHUB_USERDATA_URL
              value: {{ .keycloakJupyterhubUserdataUrl }}
            - name: KEYCLOAK_OPAL_API_URL
              value: {{ .keycloakOpalApiUrl }}
            - name: MINIO_IDENTITY_OPENID_CLIENT_ID
              value: {{ .openidClientId }}
            - name: KEYCLOAK_JUPYTERHUB_CLIENT_ID
              value: {{ .openidClientId }}
            - name: SINGLE_USER_IMAGE
              value: {{ .singleUserImage }}
            - name: PYTHONPATH
              value: {{ .pythonPath }}
            - name: opalBannerColor
              value: {{ .opalBannerColor }}
            - name: OPAL_BANNER_TEXT
              value: {{ .opalBannerText }}
            - name: KEYCLOAK_JUPYTERHUB_USERNAME_KEY
              value: {{ .keycloakJupyterhubUsernameKey }}
            {{- end }}
            - name: CONFIGPROXY_AUTH_TOKEN
              value: {{($CONFIGPROXY_AUTH_TOKEN | quote)}}
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
          envFrom:
            - secretRef:
                name: {{( include "get.tokenName" .)}}
          resources:
            requests: 
              cpu: 500m
          volumeMounts:
            - name: jupyterhub-config-py-mnt
              mountPath: /home/jovyan/jupyterhub_config.py
              subPath: jupyterhub_config.py
      volumes:
      - name: jupyterhub-config-py-mnt
        configMap:
          name: jupyterhub-config-py
