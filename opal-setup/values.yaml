argoProject: default

namespaces:
  - &minioNS minio-tenant
  - &opalNS opal

imagePullSecrets:
  name: regcred
  namespaces:
    - *opalNS
    - *minioNS

tls:
  name: tls-certs
  namespaces:
    - *minioNS
    - *opalNS

oauth:
  name: opal-oauth-common
  namespaces:
    - *opalNS
    - *minioNS

valuesFile: test-values.yaml

token:
  name: "token-env"
  namespaces:
    - *opalNS

postgresql:
  namespaces:
    - *opalNS

keycloakenv:
  name: "opal-setup-keycloak-env"
  namespaces:
    - *opalNS
    - *minioNS

postgresql:
  name: "opal-setup-keycloak-postgres"
  namespaces:
    - *opalNS
    - *minioNS

source: &appSource
  url: "https://github.com/309thEDDGE/opal-helm.git"
  targetRevision: "OPAL-1175-argocd-secrets-sync"

appValues:
  source: *appSource
  mongodb:
    enabled: true
    auth:
      existingSecret: "opal-setup-mongodb"
  keycloak:
    enabled: true
    # bootstrapper admin credentials. Should be deleted after post-install setup
    appValues:
      secrets:
        env:
          existingSecret: "opal-setup-keycloak-env"
          annotations: {}
          stringData:
            KEYCLOAK_ADMIN: "admin"
            KEYCLOAK_ADMIN_PASSWORD: "password"
            JAVA_OPTS_APPEND: -Djgroups.dns.query=opal-setup-keycloak-headless
        oauth:
          existingSecret: "opal-oauth-common"
  postgresql:
    appValues:
      existingSecret: "opal-setup-keycloak-postgres"
  traefik:
    enabled: true
  minioOperator:
    enabled: true
  minioInstance:
    enabled: true
    namespace: *minioNS
    appValues:
      creds:
        existingSecret: "minio-creds-secret"
        accessKey: opal-administrator
  jupyterhub:
    enabled: true
    appValues:
      tokenenv:
        existingSecret: "token-env"
      oauth:
        existingSecret: "opal-oauth-common"